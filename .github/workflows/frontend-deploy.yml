name: Deploy Frontend

on:
  push:
    branches:
      - main
    paths:
      - 'quasar-frontend/**'
      - 'terraform/modules/frontend/**'
      - '.github/workflows/frontend-deploy.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'quasar-frontend/package-lock.json'

      # Build the Quasar frontend
      - name: Install dependencies
        working-directory: ./quasar-frontend
        run: npm ci

      - name: Build the Quasar app
        working-directory: ./quasar-frontend
        run: npm run build

      # Set up Google Cloud for App Engine deployment
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      # Create app.yaml in the dist directory if it doesn't exist
      - name: Create app.yaml
        working-directory: ./quasar-frontend
        run: |
          cat > dist/app.yaml << EOL
          runtime: nodejs18
          service: default
          handlers:
            - url: /(.*\..+)$
              static_files: \1
              upload: (.*\..+)$
              secure: always

            - url: /.*
              static_files: index.html
              upload: index.html
              secure: always
          EOL

      # Deploy to App Engine
      - name: Deploy to App Engine
        working-directory: ./quasar-frontend/dist
        run: gcloud app deploy --quiet

      # Update Terraform state for frontend
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -var-file=environments/dev.tfvars -target=module.frontend
        
      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -var-file=environments/dev.tfvars -target=module.frontend -auto-approve

      # Optional: Run tests against deployed frontend
      - name: Verify deployment
        run: |
          echo "Verifying frontend deployment at https://${{ secrets.GCP_PROJECT_ID }}.appspot.com"
          curl -s -o /dev/null -w "%{http_code}" "https://${{ secrets.GCP_PROJECT_ID }}.appspot.com" | grep -q "200" || exit 1