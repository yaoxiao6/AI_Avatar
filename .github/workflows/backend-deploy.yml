name: Deploy Backend Services

on:
  push:
    branches:
      - main
    paths:
      - 'ollama-server/**'
      - 'flask-rag/**'
      - 'node-backend/**'
      - 'docker-compose.yml'
      - 'terraform/modules/ollama/**'
      - 'terraform/modules/flask-rag/**'
      - 'terraform/modules/node-backend/**'
      - 'terraform/modules/networking/**'
      - '.github/workflows/backend-deploy.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker gcr.io

      # Build and push Ollama image
      - name: Build and push Ollama image
        working-directory: ./ollama-server
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/ollama:latest .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/ollama:latest

      # Build and push Flask RAG image
      - name: Build and push Flask RAG image
        working-directory: ./flask-rag
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/flask-rag:latest .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/flask-rag:latest

      # Build and push Node Backend image
      - name: Build and push Node Backend image
        working-directory: ./node-backend
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/node-backend:latest .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/node-backend:latest

      # Deploy backend infrastructure using Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -var-file=environments/dev.tfvars -target=module.ollama -target=module.flask_rag -target=module.node_backend -target=module.networking
        
      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -var-file=environments/dev.tfvars -target=module.ollama -target=module.flask_rag -target=module.node_backend -target=module.networking -auto-approve